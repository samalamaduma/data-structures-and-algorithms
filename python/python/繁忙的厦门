import heapq

def find(x):
    if dj[x] == x: 
        return x
    else:
        temp = find(dj[x])
        dj[x] = temp
        return temp
    
def union(x, y):
    temp1 = find(x)
    temp2 = find(y)
    dj[temp1] = temp2
    dj[y] = temp2

n, m = map(int, input().split())
edges = []
dj = [i for i in range(n + 1)]
for _ in range(m):
    a, b, c = map(int, input().split())
    heapq.heappush(edges, (c, a, b))
picked = 0
while picked < n - 1:
    c, a, b = heapq.heappop(edges)
    if find(a) != find(b):
        union(a, b)
        picked += 1
print("{} {}".format(n - 1, c))