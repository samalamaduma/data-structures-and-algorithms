import heapq

n = int(input())
disjoint = [i for i in range(n)]
def find(i):
    if disjoint[i] == i:
        return i
    else:
        temp = find(disjoint[i])
        disjoint[i] = temp
        return temp
    
def same(x1, x2):
    temp1 = find(x1)
    temp2 = find(x2)
    disjoint[temp1] = temp2

dic = {}
for i in range(n):
    dic[chr(ord("A") + i)] = i
star = {}
side = []
totallength = 0
for i in range(n - 1):
    temp = input().split()
    l = int(temp[1])
    for i in range(l):
        heapq.heappush(side, (int(temp[2 * i + 3]), temp[0], temp[2 * i + 2]))

oper = 0
while oper < n - 1:
    length, s1, s2 = heapq.heappop(side)
    if find(dic[s1]) != find(dic[s2]):
        same(dic[s1], dic[s2])
        totallength += length
        oper += 1
print(totallength)