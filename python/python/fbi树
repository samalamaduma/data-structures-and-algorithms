class node:
    def __init__(self, s):
        self.left = None
        self.right = None
        self.value = s

def type(s):
    x0 = "0" in s.value
    x1 = "1" in s.value
    if x0 and x1:
        return "F"
    elif x0:
        return "B"
    elif x1:
        return "I"

def posto(root):
    if not root.left and not root.right:
        return type(root)
    else:
        temp = ""
        if root.left:
            temp += posto(root.left)
        if root.right:
            temp += posto(root.right)
        temp += type(root)
        return temp
    
def build(root):
    l = len(root.value)
    if l > 1:
        root.left = node(root.value[:l // 2])
        root.right = node(root.value[l // 2:])
        build(root.left)
        build(root.right)
    else:
        return

n = int(input())
s = input()
root = node(s)
build(root)
print(posto(root))