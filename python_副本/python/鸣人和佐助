from collections import deque

m, n, t = map(int, input().split())
map = []
for i in range(m):
    map.append(input())
for i in range(m):
    for j in range(n):
        if map[i][j] == "@":
            start = (i, j)
        elif map[i][j] == "+":
            end = (i, j)
queue = deque([(start[0], start[1], t, 0)])
visited = set()
visited.add((start[0], start[1], t))

directions = [(-1, 0), (0, -1), (0, 1), (1, 0)]
while queue:
    x, y, cha, step = queue.popleft()
    if cha < 0:
        continue
    for dx, dy in directions:
        nx, ny = x + dx, y + dy
        if 0 <= nx < m and 0 <= ny < n:
            if (nx, ny, cha) not in visited:
                if map[nx][ny] == "+":
                    print(step + 1)
                    exit()
                elif map[nx][ny] == "*":
                    visited.add((nx, ny, cha))
                    queue.append((nx, ny, cha, step + 1))
                elif map[nx][ny] == "#":
                    visited.add((nx, ny, cha - 1))
                    queue.append((nx, ny, cha - 1, step + 1))
print("-1")